上节中提及到了"广播"是一种可以让python代码执行的更快的手段，本节我们深入研究一下python中的广播是如何实际运作的。

先来看一个例子：


在上面的矩阵中我们列出了来自100克碳水化合物蛋白质和脂肪的卡路里数量。100克苹果的热量有56卡来自于碳水化合物远远多于蛋白质和脂肪，而在100克牛肉中有104卡来自蛋白质和135卡来之脂肪。现在想要计算四种食物中卡路里有多少百分比来自于碳水化合物蛋白质和脂肪。比如苹果，将整列数字加起来就得到100克苹果有56+1.2+1.8=59卡，而碳水化合物占比为 [公式] 。

按上述计算过程，其实我们要做的是：对矩阵这撕裂求和得到100克食物中卡路里的总量，然后让矩阵各列的每个元素除以对应的总和，从而得到百分比。代码如下：

import numpy as np
A = np.array([[56.0, 0.0, 4.4, 68.0],
[1.2, 104.0, 52.0, 8.0],
[1.8, 135.0, 99.0, 0.9]])

cal = np.sum(A,axis=0)
percent = A/cal
print(percent)


执行过程：

给定的数据是一个3*4的矩阵，如何除1*4的矩阵？

再来看一个简单的例子：

[公式]

实际上上述过程是python将100展开成1*4的格式与对应元素进行相加。


一般情况下如果有一个m*n的矩阵与一个1*n的矩阵相加，python会做的是沿着纵轴方向( [公式] )复制矩阵m次，把矩阵变成m*n的矩阵，然后再相加。


若是以上情况，则会沿着横轴方向( [公式] )复制矩阵n次，变成m*n的矩阵。

在python广播中有一些通用规则。如果有一个m*n矩阵，然后加减乘除一个1*n矩阵，python就会把它复制m次变成m*n的矩阵，然后再逐个元素做相应运算。
相反如果一个m*n矩阵加减乘除m*1，那么也会复制n次变成相同大小的矩阵，相应元素做运算。

因公式格式原因，完成博文详见知乎：https://zhuanlan.zhihu.com/p/407986181
